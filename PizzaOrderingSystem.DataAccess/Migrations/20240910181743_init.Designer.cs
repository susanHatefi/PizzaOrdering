// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaOrderSystem.DataAccess;

#nullable disable

namespace PizzaOrderingSystem.DataAccess.Migrations
{
    [DbContext(typeof(DB_Context))]
    [Migration("20240910181743_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderItem_Topping", b =>
                {
                    b.Property<Guid>("OrderItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ToppingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderItemId", "ToppingId");

                    b.HasIndex("ToppingId");

                    b.ToTable("OrderItem_Topping");
                });

            modelBuilder.Entity("PizzaOrderSystem.DataAccess.Model.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(22,2)");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PizzaOrderSystem.DataAccess.Model.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(22,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("PizzaOrderSystem.DataAccess.Model.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(22,2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Size")
                        .IsUnique();

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("67fbc163-4f48-4bfc-9855-e4b14197e29a"),
                            Price = 5m,
                            Size = "Small"
                        },
                        new
                        {
                            Id = new Guid("6f604a8c-18e9-41a2-84c2-90aa906cc60d"),
                            Price = 7m,
                            Size = "Medium"
                        },
                        new
                        {
                            Id = new Guid("5ca0be9b-70f8-4e4f-9a61-894efbbf429c"),
                            Price = 8m,
                            Size = "Large"
                        },
                        new
                        {
                            Id = new Guid("e42c97ee-92c8-4b44-a9a5-fde9e7848f98"),
                            Price = 9m,
                            Size = "ExtraLarge"
                        });
                });

            modelBuilder.Entity("PizzaOrderSystem.DataAccess.Model.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Discount")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(22,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("ProductSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<short>("TotalToppings")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Promotion");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7592dd68-f457-405f-b8d9-c7a89c740a23"),
                            Active = true,
                            Name = "Offer1",
                            Price = 5m,
                            ProductSize = "Medium",
                            Quantity = 0,
                            TotalToppings = (short)2
                        },
                        new
                        {
                            Id = new Guid("c9721317-1e81-49a7-89b6-4d268229a2ee"),
                            Active = true,
                            Name = "Offer2",
                            Price = 9m,
                            ProductSize = "Medium",
                            Quantity = 2,
                            TotalToppings = (short)4
                        },
                        new
                        {
                            Id = new Guid("63794e3d-63b6-4e16-8c11-1145feb35638"),
                            Active = true,
                            Discount = (short)50,
                            Name = "Offer3",
                            Price = 0m,
                            ProductSize = "Large",
                            Quantity = 0,
                            TotalToppings = (short)4
                        });
                });

            modelBuilder.Entity("PizzaOrderSystem.DataAccess.Model.Entities.Topping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(22,2)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Category")
                        .IsUnique();

                    b.ToTable("Topping");

                    b.HasData(
                        new
                        {
                            Id = new Guid("852da74f-2832-4f92-acb2-dc65567954b5"),
                            Category = "Veg",
                            Name = "Tomatoes",
                            Price = 1m
                        },
                        new
                        {
                            Id = new Guid("c83a3a3b-f6ef-4690-a8e1-5f3f2b50bbab"),
                            Category = "Veg",
                            Name = "Onions",
                            Price = 0.5m
                        },
                        new
                        {
                            Id = new Guid("e08d5295-0a02-4560-80b1-9d2e4d585ef0"),
                            Category = "Veg",
                            Name = "Bell Pepper",
                            Price = 1m
                        },
                        new
                        {
                            Id = new Guid("69b74b47-7113-4821-b5e0-47feb1d7e07a"),
                            Category = "Veg",
                            Name = "Mushrooms",
                            Price = 1.2m
                        },
                        new
                        {
                            Id = new Guid("8bfdb819-eef3-497b-8389-50b88cdcb6fe"),
                            Category = "Veg",
                            Name = "Pineapple",
                            Price = 0.75m
                        },
                        new
                        {
                            Id = new Guid("28b38e6a-3b79-4c67-8326-b00f0a975bf3"),
                            Category = "NonVeg",
                            Name = "Sausage",
                            Price = 1m
                        },
                        new
                        {
                            Id = new Guid("5a690aec-cead-436e-8432-4e52eede0008"),
                            Category = "NonVeg",
                            Name = "Pepperoni",
                            Price = 2m
                        },
                        new
                        {
                            Id = new Guid("2c92ba36-89e6-4851-b405-72d8801f01fd"),
                            Category = "NonVeg",
                            Name = "Barbecue Chicken",
                            Price = 3m
                        });
                });

            modelBuilder.Entity("PizzaOrderSystem.DataAccess.Model.Entities.ToppingUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ToppingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Unit")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("PromotionId");

                    b.ToTable("ToppingUnit");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6098c4b9-8496-4f3b-b07d-41be2064bf34"),
                            PromotionId = new Guid("63794e3d-63b6-4e16-8c11-1145feb35638"),
                            ToppingName = "Barbecue Chicken",
                            Unit = (short)2
                        },
                        new
                        {
                            Id = new Guid("1c2be781-d444-4296-9403-0eb0c5202d92"),
                            PromotionId = new Guid("63794e3d-63b6-4e16-8c11-1145feb35638"),
                            ToppingName = "Pepperoni",
                            Unit = (short)2
                        });
                });

            modelBuilder.Entity("OrderItem_Topping", b =>
                {
                    b.HasOne("PizzaOrderSystem.DataAccess.Model.Entities.OrderItem", null)
                        .WithMany()
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaOrderSystem.DataAccess.Model.Entities.Topping", null)
                        .WithMany()
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaOrderSystem.DataAccess.Model.Entities.OrderItem", b =>
                {
                    b.HasOne("PizzaOrderSystem.DataAccess.Model.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaOrderSystem.DataAccess.Model.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaOrderSystem.DataAccess.Model.Entities.Promotion", "Promotion")
                        .WithMany("OrderItems")
                        .HasForeignKey("PromotionId");

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("PizzaOrderSystem.DataAccess.Model.Entities.ToppingUnit", b =>
                {
                    b.HasOne("PizzaOrderSystem.DataAccess.Model.Entities.Promotion", "Promotion")
                        .WithMany("TotalToppingsUnit")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("PizzaOrderSystem.DataAccess.Model.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("PizzaOrderSystem.DataAccess.Model.Entities.Product", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("PizzaOrderSystem.DataAccess.Model.Entities.Promotion", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("TotalToppingsUnit");
                });
#pragma warning restore 612, 618
        }
    }
}
